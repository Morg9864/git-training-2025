{
	"git init": "Initialise un nouveau dépôt Git local.",
	"git clone [repo_url]": "Clone un dépôt distant dans le répertoire courant.",
	"git add [fichier]": "Ajoute des fichiers à l'index pour préparer un commit.",
	"git commit -m \"message\"": "Enregistre les modifications avec un message de commit.",
	"git status": "Affiche l'état des fichiers dans le répertoire de travail et l'index.",
	"git push [remote] [branch]": "Envoie les commits locaux vers le dépôt distant spécifié.",
	"git pull [remote] [branch]": "Récupère et fusionne les commits du dépôt distant dans la branche courante.",
	"git fetch": "Télécharge les objets et références depuis un dépôt distant sans fusionner.",
	"git merge [branch]": "Fusionne la branche indiquée dans la branche courante.",
	"git branch": "Liste, crée ou supprime des branches.",
	"git checkout [branch]": "Change de branche ou restaure des fichiers spécifiques.",
	"git log": "Affiche l'historique des commits.",
	"git diff": "Montre les différences entre les commits, branches ou entre l'index et le répertoire de travail.",
	"git reset [--soft|--mixed|--hard] [commit]": "Réinitialise l'index et/ou le répertoire de travail à un commit donné.",
	"git revert [commit]": "Crée un nouveau commit annulant les changements d'un commit antérieur.",
	"git stash": "Stocke temporairement les modifications en cours pour les reprendre plus tard.",
	"git stash pop": "Réapplique les modifications stockées et les retire de la pile de stash.",
	"git remote": "Gère les dépôts distants.",
	"git remote add [nom] [url]": "Ajoute un dépôt distant sous un nom défini.",
	"git tag [tag]": "Crée une étiquette pour marquer un commit spécifique.",
	"git show [commit]": "Affiche les détails d'un commit (différences, métadonnées, etc.).",
	"git config [--global] [key] [value]": "Configure une option Git globalement ou localement.",
	"git rm [fichier]": "Supprime un fichier du répertoire de travail et de l'index.",
	"git mv [ancien] [nouveau]": "Déplace ou renomme un fichier dans le dépôt.",
	"git bisect": "Utilise une recherche binaire pour identifier le commit introduisant un bug.",
	"git cherry-pick [commit]": "Applique les changements d'un commit spécifique sur la branche courante.",
	"git blame [fichier]": "Affiche la dernière modification de chaque ligne d'un fichier avec l'auteur et le commit correspondant.",
	"git clean": "Supprime les fichiers non suivis dans le répertoire de travail.",
	"git archive": "Crée une archive compressée d'une branche ou d'un commit.",
	"git rebase [branch]": "Rejoue les commits de la branche courante sur une autre branche.",
	"git reflog": "Affiche l'historique des références mises à jour (commits, changements de branches, etc.).",
	"git submodule add [url] [path]": "Ajoute un sous-module à un dépôt Git.",
	"git submodule update": "Met à jour les sous-modules du dépôt.",
	"git submodule init": "Initialise les sous-modules référencés dans le dépôt.",
	"git describe": "Fournit une description lisible d'un commit en référence à un tag proche.",
	"git shortlog": "Affiche un résumé des commits regroupés par auteur.",
	"git diff --cached": "Affiche les différences entre l'index et le dernier commit.",
	"git diff [commit] [commit]": "Affiche les différences entre deux commits spécifiques.",
	"git merge --no-ff [branch]": "Fusionne une branche en créant toujours un commit de fusion, même si un fast-forward est possible.",
	"git commit --amend": "Modifie le dernier commit avec les changements en cours dans l'index.",
	"git cherry": "Compare les commits entre deux branches pour afficher ceux non appliqués.",
	"git reflog expire": "Nettoie l'historique reflog pour libérer de l'espace disque.",
	"git gc": "Exécute la collecte des ordures pour optimiser la base de données Git.",
	"git fsck": "Vérifie l'intégrité et la cohérence des objets du dépôt.",
	"git instaweb": "Démarre une interface web locale pour visualiser le dépôt Git.",
	"git apply [patch]": "Applique un patch contenu dans un fichier.",
	"git blame -L [start,end] [fichier]": "Affiche l'auteur et le commit pour une plage de lignes dans un fichier.",
	"git log --graph": "Affiche l'historique des commits sous forme de graphe.",
	"git pull --rebase": "Effectue un pull en rebasant les commits locaux sur ceux distants.",
	"git push --force": "Force l'envoi des commits locaux, écrasant potentiellement l'historique distant.",
	"git push --set-upstream [remote] [branch]": "Configure la branche courante pour suivre une branche distante.",
	"git config --list": "Affiche la liste des configurations Git actuelles.",
	"git remote show [nom]": "Affiche des informations détaillées sur un dépôt distant.",
	"git remote prune [nom]": "Supprime les références distantes obsolètes pour le dépôt donné.",
	"git log --oneline": "Affiche l'historique des commits de façon condensée.",
	"git log -p": "Affiche les différences (patch) pour chaque commit de l'historique.",
	"git merge --squash [branch]": "Fusionne tous les commits d'une branche en un seul commit, sans créer de commit de fusion.",
	"git revert --no-edit [commit]": "Annule un commit sans ouvrir l'éditeur pour modifier le message de commit.",
	"git rebase -i [commit]": "Permet de réécrire l'historique via une rebase interactive à partir d'un commit donné.",
	"git config --global user.name [nom]": "Configure globalement le nom d'utilisateur pour Git.",
	"git config --global user.email [email]": "Configure globalement l'adresse email pour Git.",
	"git commit -a": "Ajoute automatiquement les fichiers modifiés (mais pas les nouveaux fichiers) et effectue un commit.",
	"git commit --allow-empty": "Crée un commit même si aucun changement n'a été détecté.",
	"git revert -n [commit]": "Prépare l'annulation d'un commit sans créer immédiatement un commit de revert.",
	"git push origin --delete [branch]": "Supprime une branche sur le dépôt distant.",
	"git log --stat": "Affiche l'historique des commits avec les statistiques de modifications par fichier.",
	"git shortlog -s": "Affiche un résumé chiffré des commits par auteur.",
	"git tag -a [tag] -m [message]": "Crée une étiquette annotée avec un message associé.",
	"git tag -l": "Liste toutes les étiquettes existantes dans le dépôt.",
	"git pull --ff-only": "Récupère et fusionne uniquement si la fusion est possible en fast-forward."
}
